<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Style x:Key="DataGridDefault" TargetType="{x:Type DataGrid}">
    <Setter Property="AutoGenerateColumns" Value="True" />
    <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
    <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource GridLine}" />
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource GridLine}" />
    <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DefaultColumnHeader}" />
  </Style>

  <Style x:Key="DataGridReadOnly"
         BasedOn="{StaticResource DataGridDefault}"
         TargetType="{x:Type DataGrid}">
    <Setter Property="AutoGenerateColumns" Value="False" />
    <Setter Property="CanUserAddRows" Value="False" />
    <Setter Property="CanUserDeleteRows" Value="False" />
    <Setter Property="IsReadOnly" Value="True" />
    <!--
      This should not be necessary, because it is defined in the base style. I got a bug report from a user claiming it is not working. Need to check that.
      TODO check scrollbar function in DataGrid
    -->
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
  </Style>

  <Style TargetType="{x:Type DataGridCell}">
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource SelectedItemActive}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="DefaultColumnHeader" TargetType="DataGridColumnHeader">
    <Setter Property="Background" Value="{DynamicResource HeaderBackground}" />
  </Style>


  <!-- https://stackoverflow.com/questions/7800367/how-to-get-a-wpf-datagrid-cell-to-right-align-without-making-the-selectable-area

    Usage:
    <DataGridTextColumn Header="Excluded" Binding="{Binding Excluded}" ElementStyle="{StaticResource RightCell}"/>
  -->
  <Style x:Key="RightCell" TargetType="{x:Type TextBlock}">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="TextAlignment" Value="Right" />
  </Style>

  <!--  Deprecated  -->

  <Style x:Key="DefaultDataGrid" TargetType="{x:Type DataGrid}">
    <Setter Property="AutoGenerateColumns" Value="True" />
    <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
    <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
    <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource GridLine}" />
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource GridLine}" />
    <Setter Property="ColumnHeaderStyle" Value="{DynamicResource DefaultColumnHeader}" />
  </Style>

</ResourceDictionary>